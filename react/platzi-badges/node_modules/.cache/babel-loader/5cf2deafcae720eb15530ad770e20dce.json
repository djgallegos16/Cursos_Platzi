{"ast":null,"code":"import _slicedToArray from \"/home/djgallegos/Documentos/REACT/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/djgallegos/Documentos/REACT/platzi-badges/src/components/BadgesList.js\";\nimport React from 'react';\nimport './styles/BadgesList.css';\nimport { Link } from 'react-router-dom';\nimport Gravatar from './Gravatar';\n\nfunction BadgesList(props) {\n  var badges = props.badges;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1]; // const filteredBadges = badges.filter(badge =>{\n  // \treturn `${badge.firstName} ${badge.lastName}`.toLowerCase().includes(query.toLowerCase());\n  // })\n\n\n  var _React$useState3 = React.useState(badges),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filteredBadges = _React$useState4[0],\n      setFilteredBadges = _React$useState4[1];\n\n  React.useMemo(function () {\n    var result = badges.filter(function (badge) {\n      \"\".concat(badge.firstName, \" \").concat(badge.lastName).toLowerCase().includes(query.toLowerCase());\n    });\n    setFilteredBadges(result);\n  }, [badges, query]);\n\n  if (filteredBadges.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Filter Badges\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      value: query,\n      onChange: function onChange(e) {\n        setQuery(e.target.value);\n        console.log(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"No Badges were found\"), React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/badges/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" Create a new Badge\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"BadgesList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Filter Badges\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: query,\n    onChange: function onChange(e) {\n      setQuery(e.target.value);\n      console.log(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, filteredBadges.map(function (badge, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"text-reset text-decoration-none Badge__row\",\n      to: \"/badges/\".concat(badge.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Gravatar, {\n      className: \"Badge__logo\",\n      email: badge.email,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Badge__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"Badge__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \", badge.firstName, \" \", badge.lastName, \" \"), React.createElement(\"p\", {\n      className: \"Badge__email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" @\", badge.twitter, \" / \", badge.email, \" \"), React.createElement(\"p\", {\n      className: \"Badge__job\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", badge.jobTitle, \" \"))));\n  })));\n}\n\nexport default BadgesList;","map":{"version":3,"sources":["/home/djgallegos/Documentos/REACT/platzi-badges/src/components/BadgesList.js"],"names":["React","Link","Gravatar","BadgesList","props","badges","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","badge","firstName","lastName","toLowerCase","includes","length","e","target","value","console","log","map","i","id","email","twitter","jobTitle"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './styles/BadgesList.css';\nimport { Link } from 'react-router-dom';\n\nimport Gravatar from './Gravatar'\n\nfunction BadgesList (props){\n\tconst badges = props.badges;\n\n\tconst [query, setQuery] = React.useState('')\n\n\t// const filteredBadges = badges.filter(badge =>{\n\t// \treturn `${badge.firstName} ${badge.lastName}`.toLowerCase().includes(query.toLowerCase());\n\t// })\n\tconst [filteredBadges, setFilteredBadges] = React.useState(badges);\n\tReact.useMemo(() =>{\n\t\tconst result =  badges.filter(badge =>{ \n\t\t\t`${badge.firstName} ${badge.lastName}`\n\t\t\t.toLowerCase().includes(query.toLowerCase()\n\t\t\t);\n\t\t});\n\t\tsetFilteredBadges(result)\n\t}, [badges, query])\n\n\tif(filteredBadges.length === 0){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>Filter Badges</label>\n\t\t\t\t<input className=\"form-control\" type=\"text\"\n\t\t\t\t\tvalue = {query}\n\t\t\t\t\tonChange = {(e)=>{\n\t\t\t\t\t\tsetQuery(e.target.value)\n\t\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\t<h3>No Badges were found</h3>\n\t\t\t\t<Link className=\"btn btn-primary\" to=\"/badges/new\"> Create a new Badge</Link>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn(\n\t\t<div className=\"BadgesList\">\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>Filter Badges</label>\n\t\t\t\t<input className=\"form-control\" type=\"text\"\n\t\t\t\t\tvalue = {query}\n\t\t\t\t\tonChange = {(e)=>{\n\t\t\t\t\t\tsetQuery(e.target.value)\n\t\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<ul className=\"list-unstyled\">\n\t\t\t\t{/* {this.props.badges.map((badge) =>{ */}\n\t\t\t\t{filteredBadges.map(function(badge,i){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t<Link className=\"text-reset text-decoration-none Badge__row\" to={`/badges/${badge.id}`}>\n\t\t\t\t\t\t\t\t<Gravatar \n\t\t\t\t\t\t\t\t\tclassName = \"Badge__logo\"\n\t\t\t\t\t\t\t\t\temail = {badge.email}\n\t\t\t\t\t\t\t\t\talt=\"Avatar\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <img className='Badge__logo' src={badge.avatarUrl} alt=\"avatar\"/> */}\n\t\t\t\t\t\t\t\t<div className='Badge__container'>\n\t\t\t\t\t\t\t\t\t<p className='Badge__name'> {badge.firstName} {badge.lastName} </p>\n\t\t\t\t\t\t\t\t\t<p className='Badge__email'> @{badge.twitter} / {badge.email} </p>\n\t\t\t\t\t\t\t\t\t<p className='Badge__job'> {badge.jobTitle} </p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t\t\n\t);\n}\n\nexport default BadgesList;"]},"metadata":{},"sourceType":"module"}